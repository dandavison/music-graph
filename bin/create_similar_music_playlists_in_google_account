#!/usr/bin/env python
import os
import sys

import gmusicapi

from music_graph.apis.echonest import SimilarArtists
from music_graph.apis.google import GoogleLibrary
from music_graph.library import MusicLibrary
from music_graph.utils import by
from music_graph.utils import info
from music_graph.utils import warn
from music_graph.playlist import generate_playlist


if __name__ == '__main__':
    args = sys.argv[1:]
    overwrite = False
    if args:
        assert args == ['-f']
        overwrite = True

    lib = MusicLibrary.load()
    google_lib = GoogleLibrary.load()
    similar_artists = SimilarArtists.load()

    client = gmusicapi.Mobileclient()
    assert client.login(os.environ['GOOGLE_USER'],
                        os.environ['GOOGLE_PASSWORD'],
                        gmusicapi.Mobileclient.FROM_MAC_ADDRESS)

    playlists = by('name', client.get_all_playlists())

    for mbid, lib_artist in lib.data.iteritems():
        if lib.is_excluded_artist(mbid):
            continue

        artist_name = lib.get_artist_name(mbid)

        playlist_name = artist_name
        if playlist_name in playlists:
            if overwrite:
                warn("Deleting playlist '%s'" % playlist_name)
                client.delete_playlist(playlists[playlist_name]['id'])
            else:
                continue

        try:
            google_id = lib_artist['google_id']
        except KeyError:
            warn("No google ID for artist '%s'" % artist_name)
            continue

        try:
            similar_artists_artist = similar_artists.data[mbid]
        except KeyError:
            warn("No similar artists for '%s'" % artist_name)
            continue

        similar_artist_google_ids = {google_id}
        for similar_artist in similar_artists_artist['similar']:
            try:
                lib_similar_artist = lib.data[similar_artist['mbid']]
                similar_artist_google_id = lib_similar_artist['google_id']
            except KeyError:
                continue
            else:
                similar_artist_google_ids.add(similar_artist_google_id)

        playlist_tracks = generate_playlist(
            google_lib.data,
            similar_artist_google_ids,
            lambda track: track.get('artistId', [None])[0])

        if not playlist_tracks:
            warn("No playlist tracks for '%s'" % artist_name)
            continue

        playlist_track_ids = [track['id'] for track in playlist_tracks]

        try:
            playlist_id = client.create_playlist(playlist_name)
            client.add_songs_to_playlist(playlist_id, playlist_track_ids)
        except gmusicapi.exceptions.CallFailure as ex:
            warn("gmusicapi error: %s(%s)" % (type(ex).__name__, ex))
        else:
            info("'%s' created similar artist playlist (%d) tracks" % (
                artist_name, len(playlist_track_ids)))
